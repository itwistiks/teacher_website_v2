document.getElementById('telegramForm').addEventListener('submit', async function(e) {
    e.preventDefault();

	// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–ø—á–∏
	if (!window.simpleCaptcha || !window.simpleCaptcha.validate()) {
		alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Ä–µ—à–∏—Ç–µ –∫–∞–ø—á—É');
		return;
	}
    
    const form = e.target;
    const formData = new FormData(form);
    const submitBtn = form.querySelector('button[type="submit"]');
    const messageDiv = document.getElementById('telegramMessage');
    
    // –ë–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞ –≤—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏
    const originalBtnText = submitBtn.textContent;
    submitBtn.disabled = true;
    submitBtn.textContent = '–û—Ç–ø—Ä–∞–≤–ª—è–µ–º...';

    try {
        // –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã –ø–æ –∑–Ω–∞—á–µ–Ω–∏—é
        const programValue = formData.get('program');
        const programNames = {
            '11': '–ï–ì–≠ (–º–µ—Å—Ç –Ω–µ—Ç)',
            '0': '–õ–∞–π—Ç-–∫—É—Ä—Å –û–ì–≠',
            '9': '9 –∫–ª–∞—Å—Å (–û–ì–≠)',
            '8': '8 –∫–ª–∞—Å—Å',
            '7': '7 –∫–ª–∞—Å—Å'
        };
        const programName = programNames[programValue] || programValue;

        // –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —Å HTML-—Ä–∞–∑–º–µ—Ç–∫–æ–π
        const message = `
üìå <b>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –∫—É—Ä—Å</b>

üë§ <b>–ò–º—è:</b> ${escapeHtml(formData.get('name'))}
üìû <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> <code>${escapeHtml(formData.get('phone'))}</code>
üéü <b>–ü—Ä–æ–º–æ–∫–æ–¥:</b> ${formData.get('promo') ? escapeHtml(formData.get('promo')) : '–Ω–µ —É–∫–∞–∑–∞–Ω'}
üìö <b>–ü—Ä–æ–≥—Ä–∞–º–º–∞:</b> ${escapeHtml(programName)}

üìù <b>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ:</b>
${formData.get('message') ? escapeHtml(formData.get('message')) : '–Ω–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏'}

‚è± <i>${new Date().toLocaleString('ru-RU')}</i>
        `.trim();



		
		// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –Ω–∞—à —Å–µ—Ä–≤–µ—Ä –≤–º–µ—Å—Ç–æ –ø—Ä—è–º–æ–≥–æ –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ Telegram API
		/* 

        const response = await fetch('–ó–∞–º–µ–Ω–∏—Ç–µ –ø—É—Ç—å –Ω–∞ URL –≤–∞—à–µ–≥–æ Cloudflare Worker', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ message })
        });

		*/


		/* –í–µ—Ä—Ö–Ω–µ–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –±—É–¥–µ—Ç –∑–∞–º–µ–Ω–∏—Ç—å –æ—Ç —Å—é–¥–∞ (–≤—Ä–æ–¥–µ) ---->*/

        // –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –±–æ—Ç–∞
        const botToken = 'Bot_Token';
        const chatId = 'My_Chat_Id';
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Telegram
        const response = await fetch(`https://api.telegram.org/bot${botToken}/sendMessage`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
                chat_id: chatId,
                text: message,
                parse_mode: 'HTML'
            })
        });

		/* <---- –î–æ —Å—é–¥–∞*/


        const result = await response.json();
        
        if (result.ok) {
            messageDiv.innerHTML = '<p style="color: #4CAF50;">–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.</p>';
            form.reset();
        } else {
            throw new Error(result.description || '–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram');
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞:', error);
        messageDiv.innerHTML = `<p style="color: #ff4757;">–û—à–∏–±–∫–∞: ${error.message}. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å –¥—Ä—É–≥–∏–º —Å–ø–æ—Å–æ–±–æ–º.</p>`;
    } finally {
        submitBtn.disabled = false;
        submitBtn.textContent = originalBtnText;
    }
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è HTML-—Å–∏–º–≤–æ–ª–æ–≤ (–∑–∞—â–∏—Ç–∞ –æ—Ç XSS)
function escapeHtml(text) {
    if (!text) return '';
    return text.toString()
        .replace(/&/g, '&amp;')
        .replace(/</g, '&lt;')
        .replace(/>/g, '&gt;')
        .replace(/"/g, '&quot;');
}